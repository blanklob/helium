/*!*****************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./node_modules/sass-loader/dist/cjs.js!./src/styles/password.scss ***!
  \*****************************************************************************************************************************************************************************************/
html {
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  word-break: normal;
  -moz-tab-size: 4;
  -o-tab-size: 4;
     tab-size: 4;
}

*,
::before,
::after {
  background-repeat: no-repeat;
  box-sizing: inherit;
}

::before,
::after {
  text-decoration: inherit;
  vertical-align: inherit;
}

* {
  padding: 0;
  margin: 0;
}

hr {
  overflow: visible;
  height: 0;
  color: inherit;
}

details,
main {
  display: block;
}

summary {
  display: list-item;
}

small {
  font-size: 80%;
}

[hidden] {
  display: none;
}

abbr[title] {
  border-bottom: none;
  text-decoration: underline;
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

a {
  background-color: transparent;
}

a:active,
a:hover {
  outline-width: 0;
}

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
}

pre {
  font-size: 1em;
}

b,
strong {
  font-weight: bolder;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

table {
  border-color: inherit;
  text-indent: 0;
}

input {
  border-radius: 0;
}

[disabled] {
  cursor: default;
}

[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

[type=search] {
  -webkit-appearance: textfield;
  outline-offset: -2px;
}

[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

textarea {
  overflow: auto;
  resize: vertical;
}

button,
input,
optgroup,
select,
textarea {
  font: inherit;
}

optgroup {
  font-weight: bold;
}

button {
  overflow: visible;
}

button,
select {
  text-transform: none;
}

button,
[type=button],
[type=reset],
[type=submit],
[role=button] {
  cursor: pointer;
  color: inherit;
}

button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

button:-moz-focusring,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  outline: 1px dotted ButtonText;
}

button,
html [type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

button,
input,
select,
textarea {
  background-color: transparent;
  border-style: none;
}

a:focus,
button:focus,
input:focus,
select:focus,
textarea:focus {
  outline-width: 0;
}

select {
  -moz-appearance: none;
  -webkit-appearance: none;
}

select::-ms-expand {
  display: none;
}

select::-ms-value {
  color: currentColor;
}

legend {
  border: 0;
  color: inherit;
  display: table;
  max-width: 100%;
  white-space: normal;
  max-width: 100%;
}

::-webkit-file-upload-button {
  -webkit-appearance: button;
  color: inherit;
  font: inherit;
}

img {
  border-style: none;
}

progress {
  vertical-align: baseline;
}

[aria-busy=true] {
  cursor: progress;
}

[aria-controls] {
  cursor: pointer;
}

[aria-disabled=true] {
  cursor: default;
}

@media print {
  *,
*::before,
*::after {
    background: transparent !important;
    box-shadow: none !important;
    color: #000000 !important;
    text-shadow: none !important;
  }

  a,
a:visited {
    text-decoration: underline;
  }

  a[href]::after {
    content: " (" attr(href) ")";
  }

  abbr[title]::after {
    content: " (" attr(title) ")";
  }

  a[href^="#"]::after,
a[href^="javascript:"]::after {
    content: "";
  }

  pre,
blockquote {
    border: 1px solid #999999;
    page-break-inside: avoid;
  }

  thead {
    display: table-header-group;
  }

  tr,
img {
    page-break-inside: avoid;
  }

  img {
    max-width: 100% !important;
  }

  p,
h2,
h3 {
    orphans: 3;
    widows: 3;
  }

  h2,
h3 {
    page-break-after: avoid;
  }
}
ul,
ol {
  margin: 0;
  padding: 0;
  list-style: none;
}

summary {
  cursor: pointer;
  list-style: none;
  position: relative;
}

details > * {
  box-sizing: border-box;
}

a {
  text-decoration: none;
  color: inherit;
}
a:hover {
  text-decoration: underline;
}

a:empty,
ul:empty,
dl:empty,
div:empty,
section:empty,
article:empty,
p:empty,
h1:empty,
h2:empty,
h3:empty,
h4:empty,
h5:empty,
h6:empty {
  display: none !important;
}

p,
figure {
  margin: 0;
  padding: 0;
}

a,
area,
button,
input,
label,
select,
textarea,
[tabindex] {
  touch-action: manipulation;
}

[hreflang] > abbr[title] {
  text-decoration: none;
}

table {
  border-spacing: 0;
  border-collapse: collapse;
}

button {
  cursor: pointer;
}

.a11y {
  position: absolute;
  display: flex;
  justify-content: space-between;
  align-items: center;
  z-index: 999;
  transform: translateY(-150%);
  transition: none;
}
.a11y[focus-within] {
  transform: translateY(0%);
}
.a11y:focus-within {
  transform: translateY(0%);
}

img {
  max-width: 100%;
  font-style: italic;
  vertical-align: middle;
}

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

svg {
  fill: currentColor;
}

.c-button,
button,
[role=button] {
  cursor: pointer;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  margin: 0;
  text-align: center;
  text-decoration: none;
  border: 0;
  border-radius: 0.3125rem;
  padding: 0.75rem 1.125rem;
  font-family: var(--font-heading-family);
  font-style: var(--font-heading-style);
  font-weight: var(--font-heading-weight);
  font-size: 1.25rem;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  transition: transform 200ms ease-in;
}
.c-button:hover, .c-button.-primary:hover,
button:hover,
button.-primary:hover,
[role=button]:hover,
[role=button].-primary:hover {
  text-decoration: none;
}
.c-button, .c-button.-primary,
button,
button.-primary,
[role=button],
[role=button].-primary {
  background-color: rgba(var(--color-base-solid-button), 1);
  color: rgba(var(--color-base-background-primary), 1);
}
.c-button.-secondary,
button.-secondary,
[role=button].-secondary {
  background-color: transparent;
  color: rgba(var(--color-base-outline-button), 1);
  border: 1px solid rgba(var(--color-base-outline-button), 1);
}
.c-button.-small,
button.-small,
[role=button].-small {
  min-width: 6rem;
}
.c-button.-large,
button.-large,
[role=button].-large {
  min-width: 20rem;
}
.c-button.-loading,
button.-loading,
[role=button].-loading {
  cursor: not-allowed;
  opacity: 0.8;
}
.c-button.-disabled, .c-button:disabled, .c-button[aria-disabled=true],
button.-disabled,
button:disabled,
button[aria-disabled=true],
[role=button].-disabled,
[role=button]:disabled,
[role=button][aria-disabled=true] {
  cursor: not-allowed;
  background-color: gray;
}

.c-heading,
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: var(--font-heading-family);
  font-style: var(--font-heading-style);
  font-weight: var(--font-heading-weight);
  color: inherit;
  text-decoration: none;
}

.c-heading h1, .c-heading.-h1 {
  font-size: 3.375rem;
  line-height: 1.2;
}
@media screen and (max-width: 750px) {
  .c-heading h1, .c-heading.-h1 {
    font-size: 2.375rem;
  }
}
.c-heading h2, .c-heading.-h2 {
  font-size: 1.625rem;
}
@media screen and (max-width: 750px) {
  .c-heading h2, .c-heading.-h2 {
    font-size: 1.375rem;
  }
}
.c-heading h3, .c-heading.-h3 {
  font-size: 1.1875rem;
}
.c-heading h4, .c-heading.-h4 {
  font-size: 1.0625rem;
}
.c-heading.-bold {
  font-weight: 700;
}
.c-heading.upper {
  text-transform: uppercase;
}

.c-body {
  font-family: var(--font-body-family);
  font-style: var(--font-body-style);
  font-weight: var(--font-body-weight);
  color: inherit;
  line-height: 1.5;
  text-decoration: none;
}
.c-body.-h1 {
  font-size: 1.5rem;
}
.c-body.-h2 {
  font-size: 1.1875rem;
}
.c-body.-h3 {
  font-size: 0.9375rem;
}
.c-body.-italic {
  font-style: italic;
}
.c-body.-bold {
  font-weight: 700;
}

.o-container {
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  margin-top: 0;
  margin-bottom: 0;
}
.o-container.-small {
  padding-left: 0.5em;
  padding-right: 0.5em;
}
.o-container, .o-container.-medium {
  padding-left: 1em;
  padding-right: 1em;
}
.o-container.-large {
  padding-left: 2em;
  padding-right: 2em;
}
.o-container.-narrow {
  max-width: 30em;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/