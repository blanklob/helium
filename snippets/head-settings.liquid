{% comment %}
  Passes global shopify settings to CSS custom properties and
  Theme global object. Use good old ES5 in this file!

  Usage:
  {%- render 'head-settings' -%}

  Warning:
    This file is mounted to the global settings files in
    'src/styles/settings' directory, any modification need
    to also be applied to the other file and vice versa.
{% endcomment %}

{% comment %} Style/Liquid Settings {% endcomment %}
{%- liquid
  assign font_header_bold = settings.fonts_header | font_modify: 'weight', 'bold'
  assign font_body_bold = settings.fonts_body | font_modify: 'weight', 'bold'

  assign font_header_italic= settings.fonts_header | font_modify: 'style', 'italic'
  assign font_body_italic = settings.fonts_body | font_modify: 'style', 'italic'

  assign font_header_bold_italic= font_header_bold | font_modify: 'style', 'italic'
  assign font_body_bold_italic = font_body_bold | font_modify: 'style', 'italic'
-%}

{%- style -%}
  {% comment %} Header font face {% endcomment %}
  {{ settings.fonts_header | font_face: font_display: 'swap' }}
  {{ font_header_bold | font_face: font_display: 'swap' }}
  {{ font_header_italic | font_face: font_display: 'swap' }}
  {{ font_header_bold_italic | font_face: font_display: 'swap' }}

  {% comment %} Body font face {% endcomment %}
  {{ settings.fonts_body | font_face: font_display: 'swap' }}
  {{ font_body_bold | font_face: font_display: 'swap' }}
  {{ font_body_italic | font_face: font_display: 'swap' }}
  {{ font_body_bold_italic | font_face: font_display: 'swap' }}

  {% comment %} Theme custom properties {% endcomment %}
  :root {
    --font-heading-family: {{ settings.fonts_header.family }}, {{ settings.fonts_header.fallback_families }};
    --font-heading-style: {{ settings.fonts_header.style }};
    --font-heading-weight: {{ settings.fonts_header.weight }};

    --font-body-family: {{ settings.fonts_body.family }}, {{ settings.fonts_body.fallback_families }};
    --font-body-style: {{ settings.fonts_body.style }};
    --font-body-weight: {{ settings.fonts_body.weight }};

    --color-base-text: {{ settings.colors_text.red }}, {{ settings.colors_text.green }}, {{ settings.colors_text.blue }};
    --color-base-background-primary: {{ settings.colors_background_primary.red }}, {{ settings.colors_background_primary.green }}, {{ settings.colors_background_primary.blue }};
    --color-base-background-secondary: {{ settings.colors_background_secondary.red }}, {{ settings.colors_background_secondary.green }}, {{ settings.colors_background_secondary.blue }};
    --color-base-solid-button: {{ settings.colors_solid_button.red }}, {{ settings.colors_solid_button.green }}, {{ settings.colors_solid_button.blue }};
    --color-base-outline-button: {{ settings.colors_outline_button.red }}, {{ settings.colors_outline_button.green }}, {{ settings.colors_outline_button.blue }};
    --color-base-accent-primary: {{ settings.colors_accent_primary.red }}, {{ settings.colors_accent_primary.green }}, {{ settings.colors_accent_primary.blue }};
    --color-base-accent-secondary: {{ settings.colors_accent_secondary.red }}, {{ settings.colors_accent_secondary.green }}, {{ settings.colors_accent_secondary.blue }};
  }

  *,
  *::before,
  *::after {
    box-sizing: inherit;
  }

  html {
    box-sizing: border-box;
    font-size: 16px;
    line-height: 1.3;
    min-height: 100%;
    scroll-behavior: smooth;
  }

  body {
    display: grid;
    grid-template-rows: auto 1fr auto;
    grid-template-columns: 100%;
    min-height: 100%;
    margin: 0;
    font-size: 1.5rem;
    letter-spacing: -0.02rem;
    line-height: 1.4;
    font-family: var(--font-body-family);
    font-style: var(--font-body-style);
    font-weight: var(--font-body-weight);
    background-color: rgba(var(--color-base-background-primary), 1);
  }

  @media screen and (min-width: 750px) {
    body {
      font-size: 1.6rem;
    }
  }
{%- endstyle -%}

{% comment %} JavaScript/Liquid Settings {% endcomment %}
<script>
  window.routes = {
    cart: '{{ routes.cart_url }}',
    cartAdd: '{{ routes.cart_add_url }}',
    cartChange: '{{ routes.cart_change_url }}',
    cartUpdate: '{{ routes.cart_update_url }}',
    predictiveSearch: '{{ routes.predictive_search_url }}',
    recommendations:  '{{ routes.product_recommendations_url }}',
  };

  window.cartStrings = {
    error: `{{ 'sections.cart.cart_error' | t }}`,
    quantityError: `{{ 'sections.cart.cart_quantity_error' | t }}`
  };

  document.documentElement.className = document.documentElement.className.replace('no-js', 'has-js');
</script>

